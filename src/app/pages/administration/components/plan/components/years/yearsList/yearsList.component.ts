import { Component, Input, Output, EventEmitter } from '@angular/core';


    //import { PlanService } from '../../../../../../../services/plan.service';

// import { EditItemModel } from '../../../../../../../models/edit-item';
// import { PlanModel } from '../../../../../../../models/plan';
import { YearModel } from '../../../../../../../models/year';
  import { PlanModel } from '../../../../../../../models/plan';
    import { GoalModel } from '../../../../../../../models/goal';
      import { GolesPlamModel } from '../../../../../../../models/golesPlam';
          import { TargetModel } from '../../../../../../../models/target';
        import { TargetsGoalPlanModel } from '../../../../../../../models/targetsGoalPlan';

        
  //import { YearService } from '../../../../../../../services/year.service';
          import { PlanService } from '../../../../../../../services/plan.service';
          //import { PlanModel } from '../../../../../../../models/plan';  


//??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
//??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
//??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
//??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
/**
 * Este componente:
 *  -Recibe los YEARS (o mejor, los deberia consulta el mismo)
 * 
 *    -En el template se hace un LOOP(ngFor) de los YEARS y se crea un CHILD para cada YEAR
 * 
 * el CHILD lo podria pasar en ng-content
 * 
 * 
 */
//??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
//??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
//??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
//??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????

@Component({
  selector: 'years-list',
  template: require('./yearsList.html')
})

export class YearsListComponent {


  private creatingPlan: boolean = false;


  _planes: Array<PlanModel>

  @Input()
  set planes (planes: Array<PlanModel>) {
        this._planes = planes;                    
  }
  get planes () {
    return this._planes;
  }  

  @Input() years: Array<YearModel>;
    // @Input() planes: Array<PlanModel>;
      @Input() goals: Array<GoalModel>;
        @Input() golesPlam: Array<GolesPlamModel>;
            @Input() targets: Array<TargetModel>;
          @Input() targetsGoalPlan: Array<TargetsGoalPlanModel>;
          
@Input() targetsStructure: any;
    

  constructor(private _planesService: PlanService) { }
    // constructor(private _yearsService: YearService) { }




  createNewPlan() {
    console.log(' -->> createNewPlan ');
    this.creatingPlan = true;  //Para indicar si hay algun plan en Edicion
  }


  cancelPlanCreation(a: any) {
    console.warn("cancelPlanCreation");
    //console.warn(a);
    this.creatingPlan = false;  //Para indicar que YA NO HAY ningun plan en Edicion
  }

  savePlanCreation(myNewPlan: PlanModel) {
    console.warn("savePlanCreation myNewPlan.yearId :: "+myNewPlan.yearId); 
    //console.warn(myNewPlan);
    this.creatingPlan = false;  //Para indicar que YA NO HAY ningun plan en Edicion


    this._planesService
      .create(myNewPlan)
      .then((data) => {
          console.warn("PLAN_SAVED : planID="+data.id); 

          this.creatingPlan = false;  //Para indicar que YA NO HAY ningun plan en Edicion

          // Pipe updates display because "this._planes" array is a new object
            this._planes = this._planes.concat(data);   
          // Pure pipe won't update display because "this._planes" array reference is unchanged    // Impure pipe will display
            //this._planes.push(data);

      })
      .catch((e) => {
        console.error("===>>> NO LOGRO CREAR !!!! ");
        console.error("===>>> reject: " + e);

        this.creatingPlan = true;  //Para indicar si hay algun plan en Edicion
      });

  }



}

